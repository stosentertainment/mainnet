{"version":3,"sources":["utils/formatBalance.ts","hooks/useTickets.ts","utils/callHelpers.ts","utils/erc20.ts","hooks/useApprove.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","utils/lotteryUtils.js","hooks/useAllowance.ts","hooks/useTokenBalance.ts","components/UnlockButton.tsx","hooks/useGetLotteryHasDrawn.ts","hooks/useBuyLottery.ts","components/Input/Input.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/helpers/CountdownHelpers.ts","contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","useTotalRewards","useState","rewards","setRewards","lotteryContract","useLottery","fastRefresh","useRefresh","useEffect","a","getTotalRewards","res","fetchBalance","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","account","useWallet","ticketsContract","useLotteryTicket","useCallback","getTotalClaim","claim","useWinningNumbers","winngNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","approve","lpContract","masterChefContract","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","getContract","provider","Web3","eth","Contract","erc20","getAllowance","allowance","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","useSousApprove","sousId","dispatch","useDispatch","useSousChef","onApprove","updateUserAllowance","useLotteryApprove","cakeContract","useCake","useNftApprove","tokenContract","spenderAddress","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","multiCall","abi","calls","web3","getWeb3","multi","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","slice","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","console","error","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","finanltokenIds","r","drawed","calls4","reduce","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","parseInt","historyNumbers","winningNumbers","useLotteryAllowance","setAllowance","fetchAllowance","refreshInterval","setInterval","clearInterval","useNftAllowance","dependency","log","fetch","useTokenBalance","setBalance","ethereum","UnlockButton","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","txHash","useMultiBuyLottery","onMultiBuy","useMaxNumber","max","setMax","fetchMax","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","symbol","availableSymbol","onSelectMax","toLocaleString","BuyTicketModal","onDismiss","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","maxTickets","handleBuy","Math","floor","random","handleSelectMax","Number","title","e","currentTarget","Tips","Announce","Final","fullWidth","variant","disabled","curday","secTime","ticker","createContext","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","startDrawTimer","secs","drawTick","dt","setTime","getTimezoneOffset","nowDate","offset","countertime","getFullYear","getMonth","getDate","curtime","diff","getDay","getDrawSeconds","hours","mins","days","startSalesTimer","salesTick","getSalesSeconds","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","daysHoursAndMinutesString","getTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","bold","color","Title","Heading","attrs","as","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","winNumbers","rewardMatch","number","n","listItems","emoji","join","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","useModal","onPresentMyTickets","handleClaim","window","location","reload","winnings","style","marginRight","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","backdropFilter","background","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","cakeBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","ExpandableSectionButton","expanded","aria-label","role","defaultProps","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","href","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Provider"],"mappings":"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","file":"static/js/12.e483c673.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import Web3 from 'web3'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AbiItem } from 'web3-utils'\r\nimport erc20 from 'config/abi/erc20.json'\r\n\r\nexport const getContract = (provider: ProviderType, address: string) => {\r\n  const web3 = new Web3(provider)\r\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\r\n  return contract\r\n}\r\n\r\nexport const getAllowance = async (\r\n  lpContract: Contract,\r\n  masterChefContract: Contract,\r\n  account: string,\r\n): Promise<string> => {\r\n  try {\r\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\r\n    return allowance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n\r\nexport const getTokenBalance = async (\r\n  provider: ProviderType,\r\n  tokenAddress: string,\r\n  userAddress: string,\r\n): Promise<string> => {\r\n  const contract = getContract(provider, tokenAddress)\r\n  try {\r\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\r\n    return balance\r\n  } catch (e) {\r\n    return '0'\r\n  }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n\r\n// Approve an NFT\r\nexport const useNftApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (ticketIssue.toString() === issueIdex) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIdex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIdex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\r\n    return amount / 1e18 / 10\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve NFT allowance\r\nexport const useNftAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.log(e.toString())\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy('10', numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > 40) {\r\n      setVal('40')\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * 10\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"STOS\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 STOS')}</Tips>\r\n        <Tips>{TranslateString(458, '1 Ticket = 10 STOS')}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your STOS cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} STOS`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          fullWidth\r\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 40 || parseInt(val) < 1}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n/* New weekly countdown helper, starts every Wednesday 8PM :: Starts Here */\r\n\r\nlet curday\r\nlet secTime\r\nlet ticker\r\n\r\nconst getDrawSeconds = () => {\r\n  const dt = new Date();\r\n  dt.setTime(dt.getTime()+dt.getTimezoneOffset()*60*1000);\r\n  const offset = -300; // Timezone offset for EST in minutes.\r\n  const nowDate = new Date(dt.getTime() + offset*60*1000)\r\n  const dy = 6 // Sunday through Saturday, 0 to 6\r\n  const countertime = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate(), 13, 0, 0) // 13 out of 24 hours = 1pm\r\n\r\n  const curtime = nowDate.getTime() // current time\r\n  const atime = countertime.getTime() // countdown time\r\n  let diff = (atime - curtime) / 1000\r\n  if (diff > 0) {\r\n    curday = dy - nowDate.getDay()\r\n  } else {\r\n    curday = dy - nowDate.getDay() - 1\r\n  } // after countdown time\r\n  if (curday < 0) {\r\n    curday += 7\r\n  } // already after countdown time, switch to next week\r\n  if (diff <= 0) {\r\n    diff += 86400 * 7\r\n  }\r\n  startDrawTimer(diff)\r\n}\r\n\r\nconst getSalesSeconds = () => {\r\n  const dt = new Date();\r\n  dt.setTime(dt.getTime()+dt.getTimezoneOffset()*60*1000);\r\n  const offset = -300; // Timezone offset for EST in minutes.\r\n  const nowDate = new Date(dt.getTime() + offset*60*1000)\r\n  const dy = 6 // Sunday through Saturday, 0 to 6\r\n  const countertime = new Date(nowDate.getFullYear(), nowDate.getMonth(), nowDate.getDate(), 12, 0, 0) // 13 out of 24 hours = 1pm\r\n\r\n  const curtime = nowDate.getTime() // current time\r\n  const atime = countertime.getTime() // countdown time\r\n  let diff = (atime - curtime) / 1000\r\n  if (diff > 0) {\r\n    curday = dy - nowDate.getDay()\r\n  } else {\r\n    curday = dy - nowDate.getDay() - 1\r\n  } // after countdown time\r\n  if (curday < 0) {\r\n    curday += 7\r\n  } // already after countdown time, switch to next week\r\n  if (diff <= 0) {\r\n    diff += 86400 * 7\r\n  }\r\n  startSalesTimer(diff)\r\n}\r\n\r\nconst startDrawTimer = (secs) => {\r\n  secTime = parseInt(secs)\r\n  ticker = setInterval(() => {\r\n    drawTick()\r\n  }, 1000)\r\n  drawTick() // initial count display\r\n}\r\n\r\nconst drawTick = () => {\r\n  let secs = secTime\r\n  if (secs > 0) {\r\n    secTime--\r\n  } else {\r\n    clearInterval(ticker)\r\n    getDrawSeconds() // start over\r\n  }\r\n\r\n  const days = Math.floor(secs / 86400)\r\n  secs %= 86400\r\n  const hours = Math.floor(secs / 3600)\r\n  secs %= 3600\r\n  const mins = Math.floor(secs / 60)\r\n  secs %= 60\r\n\r\n\r\n  return { days: curday, hours, mins }\r\n}\r\n\r\nconst startSalesTimer = (secs) => {\r\n  secTime = parseInt(secs)\r\n  ticker = setInterval(() => {\r\n    salesTick()\r\n  }, 1000)\r\n  salesTick() // initial count display\r\n}\r\n\r\nconst salesTick = () => {\r\n  let secs = secTime\r\n  if (secs > 0) {\r\n    secTime--\r\n  } else {\r\n    clearInterval(ticker)\r\n    getSalesSeconds() // start over\r\n  }\r\n\r\n  const days = Math.floor(secs / 86400)\r\n  secs %= 86400\r\n  const hours = Math.floor(secs / 3600) - 1\r\n  secs %= 3600\r\n  const mins = Math.floor(secs / 60)\r\n  secs %= 60\r\n\r\n\r\n  return { days: curday, hours, mins }\r\n}\r\n/* New weekly countdown helper, starts every Wednesday 8PM :: Ends Here */\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\nconst daysHoursAndMinutesString = (days, hours, mins) => `${parseInt(days)}d, ${parseInt(hours)}h, ${parseInt(mins)}m`\r\n\r\nexport const getTicketSaleTime = (): string => {\r\n  const { days, hours, mins } = salesTick()\r\n  return daysHoursAndMinutesString(days, hours, mins)\r\n}\r\n\r\nexport const getLotteryDrawTime = (): string => {\r\n  const { days, hours, mins } = drawTick()\r\n  return daysHoursAndMinutesString(days, hours, mins)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime()\r\n  const timeUntilLotteryDraw = getLotteryDrawTime()\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          {/* <Text color=\"invertedContrast\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text> */}\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(999, 'The STOS Lottery')}</Title>\r\n          <Blurb>{TranslateString(999, 'Buy tickets with STOS')}</Blurb>\r\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={`My Tickets (Total: ${myTicketNumbers.length})`} onDismiss={onDismiss}>\r\n      <TicketsList>{listItems}</TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  font-size: 25px;\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n      window.location.reload();\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(999, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              STOS\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(999, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin} style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your STOS will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button fullWidth onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useLotteryApprove } from 'hooks/useApprove'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const { onApprove } = useLotteryApprove()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"STOS\" />)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(999, 'Approve STOS')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime()\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}  style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(999, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(999, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem marginBottom=\"20px\">\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To admin'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} STOS</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card style={{ backdropFilter: 'blur(3px)', background: 'rgba(39, 38, 44, 0.8)' }}>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            {/* <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link> */}\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      {/* <HowItWorks /> */}\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(999, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(999, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} STOS`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        {/* <PastDrawsHistoryCard /> */}\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  /* useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, []) */\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          {/* <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu> */}\r\n        </Wrapper>\r\n        {/* <Divider /> */}\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}